apply plugin: 'gwt'
apply plugin: 'war'

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = ["src/"]

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation project(':core')
    implementation "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
    implementation "com.badlogicgames.gdx:gdx-box2d-gwt:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-box2d:$gdxVersion:sources"
}

gwt {
    gwtVersion = '2.10.0' // Should match the gwt version used for building the gwt backend
    maxHeapSize = "1G" // Default 256m is not enough for gwt compiler. GWT is HUNGRY
    minHeapSize = "1G"

    src = files(file("src/")) // Needs to be in front of "modules" below.
    modules 'com.space.invaders.GdxDefinition'
    devModules 'com.space.invaders.GdxDefinitionSuperdev' // Ensure this exists or remove it if not needed
    project.webAppDirName = 'webapp'

    compiler {
        strict = true
        disableCastChecking = true
    }
}

import org.docstr.gradle.plugins.gwt.GwtSuperDev
import org.akhikhl.gretty.AppBeforeIntegrationTestTask

gretty {
    httpPort = 8080
    resourceBase = project.buildDir.path + "/gwt/draftOut"
    contextPath = "/"
    portPropertiesFileName = "TEMP_PORTS.properties"
}

tasks.register('startHttpServer') {
    dependsOn draftCompileGwt

    doFirst {
        copy {
            from "webapp"
            into gretty.resourceBase
        }

        copy {
            from "war"
            into gretty.resourceBase
        }
    }
}

task beforeRun(type: AppBeforeIntegrationTestTask, dependsOn: startHttpServer) {
    file("build/TEMP_PORTS.properties").delete()
    integrationTestTask 'superDev'
    interactive false
}

tasks.register('superDev', GwtSuperDev) {
    dependsOn startHttpServer
    doFirst {
        gwt.modules = gwt.devModules
    }
}

tasks.register('dist') {
    dependsOn clean, compileGwt
    doLast {
        file("build/dist").mkdirs()
        copy {
            from "build/gwt/out"
            into "build/dist"
        }
        copy {
            from "webapp"
            into "build/dist"
        }
        copy {
            from "war"
            into "build/dist"
        }
    }
}

tasks.register('addSource') {
    doLast {
        sourceSets.main.compileClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
        sourceSets.main.runtimeClasspath += files(project(':core').sourceSets.main.allJava.srcDirs)
    }
}

tasks.compileGwt.dependsOn(addSource)
tasks.draftCompileGwt.dependsOn(addSource)
tasks.checkGwt.dependsOn(addSource)

eclipse.project.name = appName + "-html"
